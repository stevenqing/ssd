diff --git a/.vscode/launch.json b/.vscode/launch.json
index e3608e0..7d6da4f 100644
--- a/.vscode/launch.json
+++ b/.vscode/launch.json
@@ -91,11 +91,12 @@
                 "3",
                 "--rollout-len",
                 "1000",
+                "--user_name",
+                "reedzyd",
                 "--num-envs",
                 "2",
                 "--use-collective-reward",
                 "False",
-                "--local"
             ],
         },
     ]
diff --git a/social_dilemmas/envs/agent.py b/social_dilemmas/envs/agent.py
index 228ff7b..cff75e6 100644
--- a/social_dilemmas/envs/agent.py
+++ b/social_dilemmas/envs/agent.py
@@ -131,6 +131,16 @@ class Agent(object):
         else:
             return self.pos
 
+    def save_image(self, obs_dict, path):
+        from PIL import Image
+        mmm = Image.fromarray(self.full_map_to_colors().astype(np.uint8))
+        mmm.save(path + "full_map.png")
+
+        for agent_id, obs in obs_dict.items():
+            img = Image.fromarray(obs['curr_obs'])
+            img.save(path + agent_id + ".png")
+        
+
     def update_agent_pos(self, new_pos):
         """Updates the agents internal positions
 
diff --git a/social_dilemmas/envs/map_env.py b/social_dilemmas/envs/map_env.py
index 867fa49..0c027b3 100644
--- a/social_dilemmas/envs/map_env.py
+++ b/social_dilemmas/envs/map_env.py
@@ -48,8 +48,11 @@ DEFAULT_COLOURS = {
     b"P": np.array([159, 67, 255], dtype=np.uint8),  # Generic agent (any player)
     # Colours for agents. R value is a unique identifier
     b'1': np.array([0, 0, 255], dtype=np.uint8),  # Pure blue
-    b'2': np.array([2, 81, 154], dtype=np.uint8),  # Sky blue
-    b'3': np.array([204, 0, 204], dtype=np.uint8),  # Magenta
+    # b'2': np.array([2, 81, 154], dtype=np.uint8),  # Sky blue
+    b'2': np.array([254, 151, 0], dtype=np.uint8),  # Orange
+
+    b'3': np.array([238, 223, 16], dtype=np.uint8),  # Magenta
+    # b'3': np.array([204, 0, 204], dtype=np.uint8),  # Magenta
     b"4": np.array([216, 30, 54], dtype=np.uint8),  # Red
     b"5": np.array([254, 151, 0], dtype=np.uint8),  # Orange
     b"6": np.array([100, 255, 255], dtype=np.uint8),  # Cyan
